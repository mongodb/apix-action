{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["// Copyright 2024 MongoDB Inc\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as core from '@actions/core';\nimport request, { Response } from 'request';\nimport * as lodash from 'lodash';\n\nexport interface JiraIssue {\n  fields: {\n    project: { key: string };\n    summary: string;\n    description?: string;\n    issuetype?: { name: string };\n    assignee?: { name: string };\n    labels?: string[];\n    components?: { name: string }[];\n    [key: string]: any;\n  };\n}\n\nexport function main() {\n  try {\n    const token = core.getInput('token');\n    const projectKey = core.getInput('project-key');\n    const summary = core.getInput('summary');\n    const description = core.getInput('description');\n    const issuetype = core.getInput('issuetype');\n    const labels = core.getInput('labels');\n    const components = core.getInput('components');\n    const assignee = core.getInput('assignee');\n    const extraData = core.getInput('extra-data');\n    const apiBase = core.getInput('api-base');\n    const labelList = labels.split(\",\").filter(value => value != \"\");\n    const componentList = components.split(\",\").filter(value => value != \"\");\n\n    let body: JiraIssue = { fields: { project: { key: projectKey }, summary: summary } };\n    if (description != \"\") {\n      body.fields.description = description;\n    }\n    if (issuetype != \"\") {\n      body.fields.issuetype = { name: issuetype };\n    }\n    if (assignee != \"\") {\n      body.fields.assignee = { name: assignee };\n    }\n    if (labelList.length != 0) {\n      body.fields.labels = labelList;\n    }\n    if (componentList.length != 0) {\n      body.fields.components = componentList.map(value => {\n        return { name: value };\n      });\n    }\n    if (extraData != \"\") {\n      const extraDataObject = JSON.parse(extraData);\n      lodash.mergeWith(body, extraDataObject, (dst, src) => {\n        if (lodash.isArray(dst)) {\n          return dst.concat(src);\n        }\n      });\n    }\n\n    request({\n      url: `${apiBase}/rest/api/2/issue`,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      body: body,\n      json: true\n    }, (err: any, response: Response, responseBody: any) => {\n      if (err != null) {\n        return core.setFailed(err);\n      }\n      if (response.statusCode >= 400) {\n        return core.setFailed(response.statusCode + \" \" + response.statusMessage);\n      }\n      core.setOutput(\"issue-key\", responseBody.key);\n    });\n  } catch (error) {\n    if (error instanceof Error) {\n      core.setFailed(error.message);\n    } else {\n      core.setFailed(String(error));\n    }\n  }\n}\n\nmain();"],"names":[],"mappings":"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"}